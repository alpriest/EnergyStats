//
//  VariableType.swift
//  Energy Stats
//
//  Created by Alistair Priest on 12/09/2022.
//

import SwiftUI

enum VariableType: String, RawRepresentable {
    case feedinPower
    case generationPower
    case gridConsumptionPower
    case batChargePower
    case pvPower
    case loadsPower

    var rawTitle: String {
        return rawValue
    }

    var reportTitle: String {
        switch self {
        case .feedinPower:
            return "feedin"
        case .generationPower:
            return "generation"
        case .gridConsumptionPower:
            return "gridConsumption"
        case .batChargePower:
            return "batCharge"
        case .pvPower:
            return "chargeEnergyToTal" // This may be wrong. Doesn't match the values in the Fox app
        case .loadsPower:
            return "loads"
        }
    }

    var description: String {
        switch self {
        case .feedinPower:
            return "Power being sent to the grid"
        case .generationPower:
            fallthrough
        case .loadsPower:
            return "PV / Battery power coming through the inverter"
        case .gridConsumptionPower:
            return "Power coming from the grid"
        case .batChargePower:
            return "Power charging the battery"
        case .pvPower:
            return "Power generated by the solar panels"
        }
    }

    var title: String {
        switch self {
        case .feedinPower:
            return "Exported to grid"
        case .generationPower:
            fallthrough
        case .loadsPower:
            return "Generation Power"
        case .gridConsumptionPower:
            return "Imported from grid"
        case .batChargePower:
            return "Battery Charge Power"
        case .pvPower:
            return "Solar Power"
        }
    }

    var colour: Color {
        switch self {
        case .feedinPower:
            return .blue.opacity(0.8)
        case .generationPower:
            fallthrough
        case .loadsPower:
            return .mint.opacity(0.8)
        case .gridConsumptionPower:
            return .red.opacity(0.8)
        case .batChargePower:
            return .green.opacity(0.8)
        case .pvPower:
            return .yellow.opacity(0.8)
        }
    }

    init?(fromReport variable: String) {
        switch variable {
        case "feedin":
            self = VariableType.feedinPower
        case "feedinPower":
            self = VariableType.feedinPower
        case "generation":
            self = VariableType.generationPower
        case "generationPower":
            self = VariableType.generationPower
        case "gridConsumption":
            self = VariableType.gridConsumptionPower
        case "gridConsumptionPower":
            self = VariableType.gridConsumptionPower
        case "pvPower":
            self = VariableType.pvPower
        case "chargeEnergyToTal":
            self = VariableType.pvPower
        case "batChargePower":
            self = VariableType.batChargePower
        default:
            return nil
        }
    }
}
